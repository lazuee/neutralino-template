name: Release Project

on:
  push:
    branches:
      - master

jobs:
  build-launcher:
    runs-on: ${{ matrix.os }}
    name: Build launcher
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        node-version: [16.x]
        
    steps:
        - uses: actions/checkout@v3
          with:
              ref: ${{ github.head_ref }}
              fetch-depth: 0
              
        - uses: actions/setup-node@v3
          with:
             node-version: ${{ matrix.node-version }}
       
        - name: Set Configuration
          id: conf
          run: |
              dotnet tool install -g GitVersion.Tool --version=5.6.4
              dotnet gitversion /output json /config "./GitVersion.yml"
              
              echo "semVer=$(dotnet gitversion /output json /config "./GitVersion.yml" /showvariable FullSemVer /verbosity Quiet | sed 's/^[[:space:]]*//g')" >> $GITHUB_ENV
              echo "binaryName=$(cat neutralino.config.json | grep binaryName | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g') | sed 's/^[[:space:]]*//g'" >> $GITHUB_ENV
              
              echo "Name: ${{ env.binaryName }}"
              echo "Version: ${{ env.semVer }}"
              
        - name: Get Configuration 
          run: |
              echo "Name: ${{ env.binaryName }}"
              echo "Version: ${{ env.semVer }}"
              
        - name: Replace default version
          run: |
              sed -i 's/%SemVer%/${{ env.semVer }}/g' manifest.json
              sed -i 's/0.0.0/${{ env.semVer }}/g' neutralino.config.json
          
        - name: Install neutralino
          run: npm install -g @neutralinojs/neu
          
        - name: Update neutralino
          run: neu update
          
        - name: Build project
          run: neu build
          
        - name: Upload workspace
          uses: actions/upload-artifact@v3
          with:
              name: build.workspace
              path: |
               ${{ github.workspace }}
               !${{ github.workspace }}/.git
               !${{ github.workspace }}/node_modules
               !${{ github.workspace }}/bin
        - name: Display structure of uploaded files
          run: ls -R
          
  pack-launcher:
    runs-on: ${{ matrix.os }}
    name: Pack launcher
    needs: [build-launcher]
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        
    steps:
        - uses: actions/checkout@v3
          with:
              ref: ${{ github.head_ref }}
              fetch-depth: 0

        - uses: actions/download-artifact@v3
          with:
            name: build.workspace
            path: ${{ github.workspace }}
            
#         FIXME: Make appacker work! help (T_T)
#        - name: Download appacker
#          run: curl -s -L https://bluepload.unstable.life/selif/appackerv1311.exe > appacker.exe
          
#        - name: Download resourceHacker
#          run: curl -s -L https://bluepload.unstable.life/selif/resourcehacker.exe > resourceHacker.exe

        - name: Set Configuration
          id: conf
          run: |
              echo "semVer=$(cat neutralino.config.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | sed 's/^[[:space:]]*//g')" | Out-File -FilePath $env:GITHUB_ENV -Append
              echo "binaryName=$(cat neutralino.config.json | grep binaryName | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | sed 's/^[[:space:]]*//g')" | Out-File -FilePath $env:GITHUB_ENV -Append
   
        - name: Get Configuration 
          run: |
              echo "Name: ${{ env.binaryName }}"
              echo "Version: ${{ env.semVer }}"
              
        - name: Display structure of downloaded files
          run: ls -R

#         - name: Pack launcher to Portable
#           run: |
#                ./appacker.exe -r -src "./dist/${{ env.binaryName }}" -exe "${{ env.binaryName }}-win_x64.exe" -ico "./www/app.png" -dst "./${{ env.binaryName }}.exe"

        - name: Upload workspace
          uses: actions/upload-artifact@v3
          with:
              name: pack.workspace
              path: |
               ${{ github.workspace }}
               !${{ github.workspace }}/.git
               !${{ github.workspace }}/node_modules
               !${{ github.workspace }}/appacker.exe
               !${{ github.workspace }}/resourceHacker.exe
               !${{ github.workspace }}/resourceHacker.ini
               
  release-launcher:
    runs-on: ${{ matrix.os }}
    name: Release launcher
    needs: [pack-launcher]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        
    steps:
        - uses: actions/checkout@v3
          with:
              ref: ${{ github.head_ref }}
              fetch-depth: 0

        - uses: actions/download-artifact@v3
          with:
            name: pack.workspace
            path: ${{ github.workspace }}
            
        - name: Display structure of downloaded files
          run: ls -R

        - name: Set Configuration
          id: conf
          run: |
              echo "semVer=$(cat neutralino.config.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | sed 's/^[[:space:]]*//g')" >> $GITHUB_ENV
              echo "binaryName=$(cat neutralino.config.json | grep binaryName | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | sed 's/^[[:space:]]*//g')" >> $GITHUB_ENV
          
        - name: Get Configuration 
          run: |
              echo "Name: ${{ env.binaryName }}"
              echo "Version: ${{ env.semVer }}"
              
        - name: Copy the files to pages
          run: |
              mkdir -p ./pages
              mv "./dist/${{ env.binaryName }}" "./pages/public"
              cp "./manifest.json" "./pages/manifest.json"
        - name: Push to github pages
          uses: s0/git-publish-subdir-action@develop
          env:
              REPO: self
              BRANCH: gh-pages # The branch name where you want to push the assets
              FOLDER: pages # The directory where your assets are generated
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
              MESSAGE: "New version: ${{ env.semVer }}" # The commit message

        - name: Create ${{ env.binaryName }}.zip
          uses: papeloto/action-zip@v1
          with:
              files: dist/${{ env.binaryName }}
              dest: ${{ env.binaryName }}.zip
              
        - uses: maggie0002/actions/packages/automatic-releases@built-packages
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag: "latest"
            prerelease: false
            title: "Latest Assets"
            files: |
              ${{ env.binaryName }}.zip
#              ${{ env.binaryName }}.exe
